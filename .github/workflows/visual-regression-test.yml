name: visual-regression-test

on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  check_expected_screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Get commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore cached expected screenshots
        id: screenshots_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-expected-screenshots
        with:
          path: __screenshots__/
          key: ${{ runner.os }}-screenshots-${{ steps.get_hash.outputs.hash }}
          lookup-only: true

      - name: Restore pnpm cache
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache storybook build
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        id: storybook_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-storybook-build
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-static-${{ steps.get_hash.outputs.hash }}

      - name: Build Storybook
        if: steps.screenshots_cache.outputs.cache-hit != 'true' && steps.storybook_cache.outputs.cache-hit != 'true'
        run: pnpm build-storybook

  take_expected_screenshots:
    needs: check_expected_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        shard: [1/4, 2/4, 3/4, 4/4]

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Get commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore cached expected screenshots
        id: screenshots_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-expected-screenshots
        with:
          path: __screenshots__/
          key: ${{ runner.os }}-screenshots-${{ steps.get_hash.outputs.hash }}

      - name: Restore pnpm cache
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Restore storybook build
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        env:
          cache-name: cache-storybook-build
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-static-${{ steps.get_hash.outputs.hash }}

      - name: Install Puppeteer Chrome
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: npx puppeteer browsers install chrome

      - name: Install native dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: sudo apt-get update && sudo apt-get install -y fonts-liberation

      - name: Take screenshots
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm exec storycap --serverCmd "pnpm dlx http-server storybook-static -p 6006" http://localhost:6006 --shard=${{ matrix.shard }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: expected-screenshots-${{ matrix.shard }}
          path: __screenshots__
          retention-days: 1

  check_actual_screenshots:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Get commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore cached actual screenshots
        id: screenshots_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-actual-screenshots
        with:
          path: __screenshots__/
          key: ${{ runner.os }}-screenshots-${{ steps.get_hash.outputs.hash }}
          lookup-only: true

      - name: Restore pnpm cache
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache storybook build
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        id: storybook_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-storybook-build
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-static-${{ steps.get_hash.outputs.hash }}

      - name: Build Storybook
        if: steps.screenshots_cache.outputs.cache-hit != 'true' && steps.storybook_cache.outputs.cache-hit != 'true'
        run: pnpm build-storybook

  take_actual_screenshots:
    needs: check_actual_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        shard: [1/4, 2/4, 3/4, 4/4]

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Get commit hash
        id: get_hash
        run: echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Restore cached actual screenshots
        id: screenshots_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-actual-screenshots
        with:
          path: __screenshots__/
          key: ${{ runner.os }}-screenshots-${{ steps.get_hash.outputs.hash }}

      - name: Restore pnpm cache
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Restore storybook build
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        env:
          cache-name: cache-storybook-build
        with:
          path: storybook-static/
          key: ${{ runner.os }}-storybook-static-${{ steps.get_hash.outputs.hash }}

      - name: Install Puppeteer Chrome
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: npx puppeteer browsers install chrome

      - name: Install native dependencies
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: sudo apt-get update && sudo apt-get install -y fonts-liberation

      - name: Take screenshots
        if: steps.screenshots_cache.outputs.cache-hit != 'true'
        run: pnpm exec storycap --serverCmd "pnpm dlx http-server storybook-static -p 6006" http://localhost:6006 --shard=${{ matrix.shard }}

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: actual-screenshots-${{ matrix.shard }}
          path: __screenshots__
          retention-days: 1

  run_reg_suit:
    needs:
      - take_expected_screenshots
      - take_actual_screenshots
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.8.0

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get main branch commit hash
        id: main_hash
        run: echo "hash=$(git rev-parse origin/main)" >> $GITHUB_OUTPUT

      - name: Restore cached expected screenshots
        id: expected_cache
        uses: actions/cache@v4
        env:
          cache-name: cache-expected-screenshots
        with:
          path: __screenshots__/
          key: ${{ runner.os }}-screenshots-${{ steps.main_hash.outputs.hash }}

      - name: Download expected screenshots
        if: steps.expected_cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          pattern: expected-screenshots-*
          path: expected-temp
          merge-multiple: true

      - name: Merge expected screenshots
        if: steps.expected_cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p __screenshots__
          if [ -d "expected-temp" ]; then
            cp -r expected-temp/* __screenshots__/
          fi

      - name: Set reg-suit expected
        run: |
          rm -rf .reg/expected/
          mkdir -p .reg/expected
          if [ -d "__screenshots__" ] && [ "$(ls -A __screenshots__ 2>/dev/null)" ]; then
            cp -r __screenshots__/* .reg/expected/
          fi
          ls -l .reg/

      - name: Download actual screenshots
        uses: actions/download-artifact@v4
        with:
          pattern: actual-screenshots-*
          path: actual-temp
          merge-multiple: true

      - name: Setup actual screenshots
        run: |
          mkdir -p __screenshots__
          if [ -d "actual-temp" ]; then
            cp -r actual-temp/* __screenshots__/
          fi

      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: Run reg-suit
        run: pnpm test:vrt

      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .reg/
          destination_dir: ${{ github.head_ref }}

      - name: Find comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: reg-suit report

      - name: Upsert comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            reg-suit report
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{github.head_ref}}
          edit-mode: replace